[project]
name = "daia"
version = "0.1.0"
description = "Discord AI Agent"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "discord-py>=2.5.2",
    "google-genai>=1.30.0",
    "openai>=1.100.1",
    "pillow>=11.3.0",
    "pocketflow>=0.0.3",
    "python-dotenv>=1.1.1",
    "requests>=2.32.4",
]

[dependency-groups]
dev = [
    "coverage>=7.10.4",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.10",
]

[tool.pytest.ini_options]
pythonpath = [
  "."
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    ".venv/*",
    "venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
